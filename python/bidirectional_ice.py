# -*- coding: utf-8 -*-
#
# Copyright (c) ZeroC, Inc. All rights reserved.
#
#
# Ice version 3.7.3
#
# <auto-generated>
#
# Generated from file `bidirectional.ice'
#
# Warning: do not edit this file.
#
# </auto-generated>
#

from sys import version_info as _version_info_
import Ice, IcePy

# Start of module Demo
_M_Demo = Ice.openModule('Demo')
__name__ = 'Demo'

_M_Demo._t_PrinterPython = IcePy.defineValue('::Demo::PrinterPython', Ice.Value, -1, (), False, True, None, ())

if 'PrinterPythonPrx' not in _M_Demo.__dict__:
    _M_Demo.PrinterPythonPrx = Ice.createTempClass()
    class PrinterPythonPrx(Ice.ObjectPrx):

        def PrintString(self, s, context=None):
            return _M_Demo.PrinterPython._op_PrintString.invoke(self, ((s, ), context))

        def PrintStringAsync(self, s, context=None):
            return _M_Demo.PrinterPython._op_PrintString.invokeAsync(self, ((s, ), context))

        def begin_PrintString(self, s, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo.PrinterPython._op_PrintString.begin(self, ((s, ), _response, _ex, _sent, context))

        def end_PrintString(self, _r):
            return _M_Demo.PrinterPython._op_PrintString.end(self, _r)

        def ConnectBack(self, port, context=None):
            return _M_Demo.PrinterPython._op_ConnectBack.invoke(self, ((port, ), context))

        def ConnectBackAsync(self, port, context=None):
            return _M_Demo.PrinterPython._op_ConnectBack.invokeAsync(self, ((port, ), context))

        def begin_ConnectBack(self, port, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo.PrinterPython._op_ConnectBack.begin(self, ((port, ), _response, _ex, _sent, context))

        def end_ConnectBack(self, _r):
            return _M_Demo.PrinterPython._op_ConnectBack.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Demo.PrinterPythonPrx.ice_checkedCast(proxy, '::Demo::PrinterPython', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Demo.PrinterPythonPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Demo::PrinterPython'
    _M_Demo._t_PrinterPythonPrx = IcePy.defineProxy('::Demo::PrinterPython', PrinterPythonPrx)

    _M_Demo.PrinterPythonPrx = PrinterPythonPrx
    del PrinterPythonPrx

    _M_Demo.PrinterPython = Ice.createTempClass()
    class PrinterPython(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Demo::PrinterPython', '::Ice::Object')

        def ice_id(self, current=None):
            return '::Demo::PrinterPython'

        @staticmethod
        def ice_staticId():
            return '::Demo::PrinterPython'

        def PrintString(self, s, current=None):
            raise NotImplementedError("servant method 'PrintString' not implemented")

        def ConnectBack(self, port, current=None):
            raise NotImplementedError("servant method 'ConnectBack' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Demo._t_PrinterPythonDisp)

        __repr__ = __str__

    _M_Demo._t_PrinterPythonDisp = IcePy.defineClass('::Demo::PrinterPython', PrinterPython, (), None, ())
    PrinterPython._ice_type = _M_Demo._t_PrinterPythonDisp

    PrinterPython._op_PrintString = IcePy.Operation('PrintString', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), None, ())
    PrinterPython._op_ConnectBack = IcePy.Operation('ConnectBack', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_int, False, 0),), (), None, ())

    _M_Demo.PrinterPython = PrinterPython
    del PrinterPython

_M_Demo._t_PrinterCsharp = IcePy.defineValue('::Demo::PrinterCsharp', Ice.Value, -1, (), False, True, None, ())

if 'PrinterCsharpPrx' not in _M_Demo.__dict__:
    _M_Demo.PrinterCsharpPrx = Ice.createTempClass()
    class PrinterCsharpPrx(Ice.ObjectPrx):

        def PrintString(self, s, context=None):
            return _M_Demo.PrinterCsharp._op_PrintString.invoke(self, ((s, ), context))

        def PrintStringAsync(self, s, context=None):
            return _M_Demo.PrinterCsharp._op_PrintString.invokeAsync(self, ((s, ), context))

        def begin_PrintString(self, s, _response=None, _ex=None, _sent=None, context=None):
            return _M_Demo.PrinterCsharp._op_PrintString.begin(self, ((s, ), _response, _ex, _sent, context))

        def end_PrintString(self, _r):
            return _M_Demo.PrinterCsharp._op_PrintString.end(self, _r)

        @staticmethod
        def checkedCast(proxy, facetOrContext=None, context=None):
            return _M_Demo.PrinterCsharpPrx.ice_checkedCast(proxy, '::Demo::PrinterCsharp', facetOrContext, context)

        @staticmethod
        def uncheckedCast(proxy, facet=None):
            return _M_Demo.PrinterCsharpPrx.ice_uncheckedCast(proxy, facet)

        @staticmethod
        def ice_staticId():
            return '::Demo::PrinterCsharp'
    _M_Demo._t_PrinterCsharpPrx = IcePy.defineProxy('::Demo::PrinterCsharp', PrinterCsharpPrx)

    _M_Demo.PrinterCsharpPrx = PrinterCsharpPrx
    del PrinterCsharpPrx

    _M_Demo.PrinterCsharp = Ice.createTempClass()
    class PrinterCsharp(Ice.Object):

        def ice_ids(self, current=None):
            return ('::Demo::PrinterCsharp', '::Ice::Object')

        def ice_id(self, current=None):
            return '::Demo::PrinterCsharp'

        @staticmethod
        def ice_staticId():
            return '::Demo::PrinterCsharp'

        def PrintString(self, s, current=None):
            raise NotImplementedError("servant method 'PrintString' not implemented")

        def __str__(self):
            return IcePy.stringify(self, _M_Demo._t_PrinterCsharpDisp)

        __repr__ = __str__

    _M_Demo._t_PrinterCsharpDisp = IcePy.defineClass('::Demo::PrinterCsharp', PrinterCsharp, (), None, ())
    PrinterCsharp._ice_type = _M_Demo._t_PrinterCsharpDisp

    PrinterCsharp._op_PrintString = IcePy.Operation('PrintString', Ice.OperationMode.Normal, Ice.OperationMode.Normal, False, None, (), (((), IcePy._t_string, False, 0),), (), None, ())

    _M_Demo.PrinterCsharp = PrinterCsharp
    del PrinterCsharp

# End of module Demo
